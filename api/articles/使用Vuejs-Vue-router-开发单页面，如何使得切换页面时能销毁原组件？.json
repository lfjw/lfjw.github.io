{"title":"使用Vuejs + Vue-router 开发单页面，如何使得切换页面时能销毁原组件？","slug":"使用Vuejs-Vue-router-开发单页面，如何使得切换页面时能销毁原组件？","date":"2018-05-05T13:55:49.000Z","updated":"2018-05-09T09:03:08.000Z","comments":true,"path":"api/articles/使用Vuejs-Vue-router-开发单页面，如何使得切换页面时能销毁原组件？.json","photos":[],"link":"","excerpt":null,"covers":null,"content":"<p>问题：(javascript)使用Vuejs + Vue-router 开发单页面，如何使得切换页面时能销毁原组件？<br>描述:</p>\n<p>我有一个单页面应用，有页面A和页面B，二者是同级组件，关系是这样的：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">router.map(&#123;</span><br><span class=\"line\">&apos;/a&apos;: &#123;</span><br><span class=\"line\">    component: A</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">&apos;/b&apos;: &#123;</span><br><span class=\"line\">    component: B</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n<p>例如，第一次打开时，显示页面 A，页面 A 有一个setInterval事件，每隔一秒钟会向后台发送一个Ajax请求。这时我点击页面 A 上的跳转按钮，跳到页面 B，通过观察网络连接，发现页面 A 上的Ajax请求仍然在继续。</p>\n<p>请问应当进行什么样的设置，才能使得页面切换时，原来的组件就被销毁？</p>\n<p>这是个非常严重的问题，同级组件绑定的事件，还会在另一个组件里继续监听。所以我猜想会有简单的配置方法，但我看遍了 Vue 的文档和 Vue-router 的文档，也未发现相关配置。</p>\n<p>参考文档：</p>\n<p><a href=\"http://vuejs.github.io/vue-router/zh-cn/options.html\" target=\"_blank\" rel=\"noopener\">http://vuejs.github.io/vue-router/zh-cn/options.html</a></p>\n<p><a href=\"http://vuejs.org/guide/\" target=\"_blank\" rel=\"noopener\">http://vuejs.org/guide/</a></p>\n<p>解决方案1:</p>\n<p>1、setInterval事件和组件的生命周期没有直接关系。<br>2、setInterval会返回一个ID 值。setInterval() 方法会不停地调用函数，直到 clearInterval() 被调用或窗口被关闭。由 setInterval() 返回的 ID 值可用作 clearInterval() 方法的参数。</p>\n<p>解决方案2:</p>\n<p>router切换时，原来的组件确实已经销毁了，你可以看到ready生命周期函数是每次都触发了的。你这里的问题不在于组件是否销毁，因为setInterval事件本身和组件没有关系。</p>\n<p>setInterval相当于该组件申请的一种资源，在使用该组件时获取，在离开该组件时释放。这个过程只能是你手动进行的。所以你应该在离开该组件时，比如route的deactivate或者beforeDestory生命周期函数里手动clearInterval。</p>\n<p>其实很多框架里都是这样，比如桌面程序中某个窗口初始化时需要打开数据库连接（我们也可以视为一种资源），当窗口关闭时，程序本身并不知道“打开数据库连接”的反向操作是什么。所以我们需要在窗口销毁的回调方法里手动去释放这个资源，去写断开连接的代码。</p>\n<p>解决方案3:</p>\n<p><a href=\"http://stackoverflow.com/questions/35104770/how-to-destroy-a-component-when-building-spa-with-vue-js-and-vue-router\" target=\"_blank\" rel=\"noopener\">http://stackoverflow.com/questions/35104770/how-to-destroy-a-component-when-building-spa-with-vue-js-and-vue-router</a></p>\n<p><a href=\"http://vuejs.github.io/vue-router/zh-cn/pipeline/deactivate.html\" target=\"_blank\" rel=\"noopener\">http://vuejs.github.io/vue-router/zh-cn/pipeline/deactivate.html</a></p>\n<p>以上介绍了“(javascript)使用Vuejs + Vue-router 开发单页面，如何使得切换页面时能销毁原组件？”的问题解答，希望对有需要的网友有所帮助。<br>本文网址链接：<a href=\"http://www.codes51.com/itwd/1037580.html\" target=\"_blank\" rel=\"noopener\">http://www.codes51.com/itwd/1037580.html</a></p>\n<p>最后我根据解决方案1解决了，贴下我的代码：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">created () &#123;</span><br><span class=\"line\">  this.n = setInterval(() =&gt; &#123;</span><br><span class=\"line\">    //...</span><br><span class=\"line\">  &#125;, 20000)</span><br><span class=\"line\">  this.n1 = setInterval(() =&gt; &#123;</span><br><span class=\"line\">     //...</span><br><span class=\"line\">  &#125;, 60000)</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">beforeDestroy () &#123;</span><br><span class=\"line\">  clearInterval(this.n)</span><br><span class=\"line\">  clearInterval(this.n1)</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n","categories":[],"tags":[]}