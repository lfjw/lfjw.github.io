{"title":"如何查看页面是否开启了gzip压缩","slug":"如何查看页面是否开启了gzip压缩","date":"2018-04-27T12:35:44.000Z","updated":"2018-04-27T13:08:58.000Z","comments":true,"path":"api/articles/如何查看页面是否开启了gzip压缩.json","photos":[],"link":"","excerpt":null,"covers":["/2018/04/27/如何查看页面是否开启了gzip压缩/gzip.jpeg","/2018/04/27/如何查看页面是否开启了gzip压缩/nogzip.jpeg"],"content":"<h3 id=\"前情简要：我们是前后端分离项目，通过nginx进行反向代理。vue由于是客户端渲染，所以项目很大。我让运维的小伙伴，帮忙在服务器端配置一下开启gzip传输，结果人家说，nginx默认就是这个请求。明显是欺负哥们不懂呐，也可能是没有get到我的点。但是你也没脾气，怎么办，那就自己研究明白，也好跟他沟通啊。\"><a href=\"#前情简要：我们是前后端分离项目，通过nginx进行反向代理。vue由于是客户端渲染，所以项目很大。我让运维的小伙伴，帮忙在服务器端配置一下开启gzip传输，结果人家说，nginx默认就是这个请求。明显是欺负哥们不懂呐，也可能是没有get到我的点。但是你也没脾气，怎么办，那就自己研究明白，也好跟他沟通啊。\" class=\"headerlink\" title=\"前情简要：我们是前后端分离项目，通过nginx进行反向代理。vue由于是客户端渲染，所以项目很大。我让运维的小伙伴，帮忙在服务器端配置一下开启gzip传输，结果人家说，nginx默认就是这个请求。明显是欺负哥们不懂呐，也可能是没有get到我的点。但是你也没脾气，怎么办，那就自己研究明白，也好跟他沟通啊。\"></a>前情简要：我们是前后端分离项目，通过nginx进行反向代理。vue由于是客户端渲染，所以项目很大。我让运维的小伙伴，帮忙在服务器端配置一下开启gzip传输，结果人家说，nginx默认就是这个请求。明显是欺负哥们不懂呐，也可能是没有get到我的点。但是你也没脾气，怎么办，那就自己研究明白，也好跟他沟通啊。</h3><h3 id=\"既然如此，让我们从以下几个方面说起\"><a href=\"#既然如此，让我们从以下几个方面说起\" class=\"headerlink\" title=\"既然如此，让我们从以下几个方面说起\"></a>既然如此，让我们从以下几个方面说起</h3><h4 id=\"HTTP-协议中的-Content-Encoding\"><a href=\"#HTTP-协议中的-Content-Encoding\" class=\"headerlink\" title=\"HTTP 协议中的 Content-Encoding\"></a>HTTP 协议中的 Content-Encoding</h4><pre><code>Accept-Encoding 和 Content-Encoding 是 HTTP 中用来对「采用何种编码格式传输正文」进行协定的一对头部字段。\n工作原理：\n1、浏览器发送请求时，通过 Accept-Encoding 带上自己支持的内容编码格式列表；\n2、服务端从中挑选一种用来对正文进行编码，并通过 Content-Encoding 响应头指明选定的格式；\n3、浏览器拿到响应正文后，依据 Content-Encoding 进行解压。\n4、当然，服务端也可以返回未压缩的正文，但这种情况不允许返回 Content-Encoding。这个过程就是 HTTP 的内容编码机制。\n</code></pre><p>【内容编码】目的是优化传输内容大小，通俗地讲就是进行压缩。一般经过 gzip 压缩过的文本响应，只有原始大小的 1/4。对于文本类响应是否开启了内容压缩，是我们做性能优化时首先要检查的重要项目；而对于 JPG / PNG 这类本身已经高度压缩过的二进制文件，不推荐开启内容压缩，效果微乎其微还浪费 CPU。</p>\n<ul>\n<li><p>DEFLATE、ZLIB、GZIP 这种大写字符，表示数据压缩格式；</p>\n</li>\n<li><p>deflate、gzip 这种小写字符，表示 HTTP 中 Content-Encoding 的取值；</p>\n</li>\n<li><p>Gzip 特指 GUN zip 文件压缩程序，Zlib 特指 Zlib 库；</p>\n</li>\n</ul>\n<h4 id=\"nginx配置\"><a href=\"#nginx配置\" class=\"headerlink\" title=\"nginx配置\"></a>nginx配置</h4><p>这个详细内容请查看这个 👉 （Nginx配置详解）<a href=\"https://www.cnblogs.com/brant/p/7209048.html\" target=\"_blank\" rel=\"noopener\">https://www.cnblogs.com/brant/p/7209048.html</a></p>\n<h4 id=\"详解gzip\"><a href=\"#详解gzip\" class=\"headerlink\" title=\"详解gzip\"></a>详解gzip</h4><p>gzip是一种数据格式，默认且目前仅使用deflate算法压缩data部分；</p>\n<p>Gzip压缩传输能更加有效节约带宽流量。他先把文本压缩为.gz然后传输给浏览器，最后由浏览器负责解压缩呈现给用户。</p>\n<p>老版本的浏览器可能不能显示，但是现在大多数浏览器都能显示。</p>\n<h4 id=\"如何查看是否开启gizp\"><a href=\"#如何查看是否开启gizp\" class=\"headerlink\" title=\"如何查看是否开启gizp\"></a>如何查看是否开启gizp</h4><h5 id=\"先来看看开启的请求\"><a href=\"#先来看看开启的请求\" class=\"headerlink\" title=\"先来看看开启的请求\"></a>先来看看开启的请求</h5><p><img src=\"/2018/04/27/如何查看页面是否开启了gzip压缩/gzip.jpeg\" style=\"height: 500px;width: auto;\"></p>\n<h5 id=\"再来看看没开启的请求\"><a href=\"#再来看看没开启的请求\" class=\"headerlink\" title=\"再来看看没开启的请求\"></a>再来看看没开启的请求</h5><p><img src=\"/2018/04/27/如何查看页面是否开启了gzip压缩/nogzip.jpeg\" style=\"height: 500px;width: auto;\"></p>\n<p>看到这个就可以给你的小伙伴说了，看吧，人家的开启了，你没开启，自己研究研究吧！！！</p>\n","categories":[],"tags":[]}