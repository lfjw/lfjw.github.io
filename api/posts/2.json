{"total":16,"pageSize":10,"pageCount":2,"data":[{"title":"javascript中的apply和call","slug":"javascript中的apply和call","date":"2018-04-24T08:17:16.000Z","updated":"2018-05-09T09:07:34.000Z","comments":true,"path":"api/articles/javascript中的apply和call.json","excerpt":"","keywords":null,"cover":null,"content":"<p>今天深入理解一下js中的这个点</p>\n<h3 id=\"apply：方法能劫持另外一个对象的方法，继承另外一个对象的属性\"><a href=\"#apply：方法能劫持另外一个对象的方法，继承另外一个对象的属性\" class=\"headerlink\" title=\"apply：方法能劫持另外一个对象的方法，继承另外一个对象的属性.\"></a>apply：方法能劫持另外一个对象的方法，继承另外一个对象的属性.</h3><ul>\n<li><p>Function.apply(obj,args)方法能接收两个参数</p>\n</li>\n<li><p>obj：这个对象将代替Function类里this对象</p>\n</li>\n<li><p>args：这个是数组，它将作为参数传给Function（args–&gt;arguments）</p>\n</li>\n</ul>\n<p>来个例子可以更好的理解</p>\n<p>eg :</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">function Parent (name,age) &#123;</span><br><span class=\"line\">\tthis.name = name</span><br><span class=\"line\">\tthis.age = age</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">function Children (name,age,className) &#123;</span><br><span class=\"line\">\tParent.apply(this,arguments)</span><br><span class=\"line\">\tthis.className = className </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">let p = new Children(1,2,3)</span><br><span class=\"line\"></span><br><span class=\"line\">//p =&gt; Children &#123;name: 1, age: 2, className: 3&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"如果你看到-arguments有点懵逼，请查看我的另一个文章可查看我的另一篇内容\"><a href=\"#如果你看到-arguments有点懵逼，请查看我的另一个文章可查看我的另一篇内容\" class=\"headerlink\" title=\"如果你看到 arguments有点懵逼，请查看我的另一个文章可查看我的另一篇内容\"></a>如果你看到 arguments有点懵逼，请查看我的另一个文章可查看我的另一篇内容</h4><h3 id=\"call：和apply的意思一样-只不过是参数列表不一样\"><a href=\"#call：和apply的意思一样-只不过是参数列表不一样\" class=\"headerlink\" title=\"call：和apply的意思一样,只不过是参数列表不一样.\"></a>call：和apply的意思一样,只不过是参数列表不一样.</h3><ul>\n<li><p>Function.call(obj,[param1[,param2[,…[,paramN]]]])</p>\n</li>\n<li><p>obj：这个对象将代替Function类里this对象</p>\n</li>\n<li><p>params：这个是一个参数列表</p>\n</li>\n</ul>\n<p>eg:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">function Parent (name,age) &#123;</span><br><span class=\"line\">\tthis.name = name</span><br><span class=\"line\">\tthis.age = age</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">function Children (name,age,className) &#123;</span><br><span class=\"line\">\tParent.call(this,name,age)</span><br><span class=\"line\">\tthis.className = className </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">let p = new Children(1,2,3)</span><br><span class=\"line\"></span><br><span class=\"line\">//p =&gt; Children &#123;name: 1, age: 2, className: 3&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"apply和call-应用场景\"><a href=\"#apply和call-应用场景\" class=\"headerlink\" title=\"apply和call 应用场景\"></a>apply和call 应用场景</h3><ul>\n<li><p>在给对象参数的情况下,如果参数的形式是数组的时候,比如apply示例里面传递了参数arguments,这个参数是数组类型,并且在调用Parent的时候参数的列表是对应一致的(也就是Parent和Children的参数列表前两位是一致的) 就可以采用 apply </p>\n</li>\n<li><p>如果我的Parent的参数列表是这样的(age,name),而Children的参数列表是(name,age,grade),这样就可以用call来实现了,也就是直接指定参数列表对应值的位置(Parent.call(this,age,name,grade))</p>\n</li>\n</ul>\n<h3 id=\"apply的巧妙用法\"><a href=\"#apply的巧妙用法\" class=\"headerlink\" title=\"apply的巧妙用法\"></a>apply的巧妙用法</h3><p>这个就是apply的一个巧妙的用处,可以将一个数组默认的转换为一个参数列表([param1,param2,param3] 转换为 param1,param2,param3) 这个如果让我们用程序来实现将数组的每一个项,来装换为参数的列表,可能都得费一会功夫,借助apply的这点特性,所以就有了以下高效率的方法:</p>\n<ul>\n<li>Math.max 可以实现得到数组中最大的一项</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">let arr = [1,2,3,5]</span><br><span class=\"line\"></span><br><span class=\"line\">let n = Math.max.apply(null ,arr)</span><br><span class=\"line\"></span><br><span class=\"line\">// n 5</span><br></pre></td></tr></table></figure>\n<ul>\n<li>数组合并</li>\n</ul>\n<p>再比如数组的push方法</p>\n<p>var arr1=[1,3,4]</p>\n<p>var arr2=[3,4,5]</p>\n<p>如果我们要把 arr2展开，然后一个一个追加到 arr1中去，最后让  arr1=[1,3,4,3,4,5]</p>\n<p>arr1.push(arr2)  显然是不行的。 因为这样做会得到  [1,3,4, [3,4,5] ]</p>\n<p>我们只能用一个循环去一个一个的push (当然也可以用 arr1.concat(arr2) 但是concat方法并不改变 arr1本身)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var arrLen=arr2.length</span><br><span class=\"line\"></span><br><span class=\"line\">for(var i=0;i&lt;arrLen;i++)&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    arr1.push(arr2[i])</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>自从有了 Apply ,事情就变得如此简单</p>\n<p>Array.prototype.push.apply(arr1,arr2)</p>\n<p>点滴汇聚能量!</p>\n<!-- 参考学习文章链接\n\nhttp://www.cnblogs.com/xiaohongwu/archive/2011/06/15/2081237.html\n\nhttps://blog.csdn.net/bao19901210/article/details/21614761 -->\n","text":"今天深入理解一下js中的这个点apply：方法能劫持另外一个对象的方法，继承另外一个对象的属性.Function.apply(obj,args)方法能接收两个参数obj：这个对象将代替Function类里this对象args：这个是数组，它将作为参数传给Function（args","link":"","raw":null,"photos":[],"categories":[],"tags":[]},{"title":"关于svg-sprite-loader","slug":"关于svg-sprite-loader","date":"2018-04-23T06:54:36.000Z","updated":"2018-05-09T09:08:03.000Z","comments":true,"path":"api/articles/关于svg-sprite-loader.json","excerpt":"","keywords":null,"cover":null,"content":"<p>现在我们要接触的是一个叫 svg-sprite-loader 的插件，用来根据导入的 svg 文件自动生成 symbol 标签并插入 html，接下来就可以在模版中方便地使用 svg-sprite 技术了</p>\n<h3 id=\"如果不知道-svg-sprite-是什么，\"><a href=\"#如果不知道-svg-sprite-是什么，\" class=\"headerlink\" title=\"如果不知道 svg-sprite 是什么，\"></a>如果不知道 svg-sprite 是什么，</h3><p>目前，SVG Sprite最佳实践是使用symbol元素。symbol元素是什么呢？单纯翻译的话，是“符号”的意思。然，这个释义并不符合这里的场景。不知大家有没有用过Flash，symbol实际上就类似于Flash中的“影片剪辑”、或者“元件”。</p>\n<p>因此，我个人觉得，symbol应该解释为“元件”最为恰当！</p>\n<p>那，symbol和SVG Sprite又有什么关系呢？</p>\n<p>我们可以把SVG元素看成一个舞台，而symbol则是舞台上一个一个组装好的元件，这这些一个一个的元件就是我们即将使用的一个一个SVG图标。</p>\n<h2 id=\"使用svg-sprite的好处\"><a href=\"#使用svg-sprite的好处\" class=\"headerlink\" title=\"使用svg-sprite的好处\"></a>使用svg-sprite的好处</h2><ul>\n<li>页面代码清爽</li>\n<li>随处重复调用</li>\n<li>每个 SVG 图标都可以更改大小颜色</li>\n</ul>\n<p>结合vue-cli项目来简单说下</p>\n<h2 id=\"1-创建组件-SvgIcon\"><a href=\"#1-创建组件-SvgIcon\" class=\"headerlink\" title=\"1 创建组件 SvgIcon\"></a>1 创建组件 SvgIcon</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;svg :class=&quot;svgClass&quot; aria-hidden=&quot;true&quot;&gt;</span><br><span class=\"line\">    &lt;use :xlink:href=&quot;iconName&quot;&gt;&lt;/use&gt;</span><br><span class=\"line\">  &lt;/svg&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">export default &#123;</span><br><span class=\"line\">  name: &apos;svg-icon&apos;,</span><br><span class=\"line\">  props: &#123;</span><br><span class=\"line\">    iconClass: &#123;</span><br><span class=\"line\">      type: String,</span><br><span class=\"line\">      required: true</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    className: &#123;</span><br><span class=\"line\">      type: String</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  computed: &#123;</span><br><span class=\"line\">    iconName() &#123;</span><br><span class=\"line\">      return `#icon-$&#123;this.iconClass&#125;`</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    svgClass() &#123;</span><br><span class=\"line\">      if (this.className) &#123;</span><br><span class=\"line\">        return &apos;svg-icon &apos; + this.className</span><br><span class=\"line\">      &#125; else &#123;</span><br><span class=\"line\">        return &apos;svg-icon&apos;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;style scoped&gt;</span><br><span class=\"line\">.svg-icon &#123;</span><br><span class=\"line\">  width: 1em;</span><br><span class=\"line\">  height: 1em;</span><br><span class=\"line\">  vertical-align: -0.15em;</span><br><span class=\"line\">  fill: currentColor;</span><br><span class=\"line\">  overflow: hidden;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/style&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-src目录下创建icon\"><a href=\"#2-src目录下创建icon\" class=\"headerlink\" title=\"2 src目录下创建icon\"></a>2 src目录下创建icon</h2><p>目录结构为</p>\n<p>icon/svg 此处放置svg图片</p>\n<p>icon/index.js</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import Vue from &apos;vue&apos;</span><br><span class=\"line\">import SvgIcon from &apos;@/components/SvgIcon&apos;// svg组件</span><br><span class=\"line\"></span><br><span class=\"line\">// register globally</span><br><span class=\"line\">Vue.component(&apos;svg-icon&apos;, SvgIcon)</span><br><span class=\"line\"></span><br><span class=\"line\">const requireAll = requireContext =&gt; requireContext.keys().map(requireContext)</span><br><span class=\"line\">const req = require.context(&apos;./svg&apos;, false, /\\.svg$/)</span><br><span class=\"line\">requireAll(req)</span><br></pre></td></tr></table></figure>\n<h3 id=\"此处多补充一下扩展知识点-require-context\"><a href=\"#此处多补充一下扩展知识点-require-context\" class=\"headerlink\" title=\"此处多补充一下扩展知识点  require.context\"></a>此处多补充一下扩展知识点  require.context</h3><h3 id=\"可以使用-require-context-方法来创建自己的（模块）上下文，这个方法有-3-个参数：\"><a href=\"#可以使用-require-context-方法来创建自己的（模块）上下文，这个方法有-3-个参数：\" class=\"headerlink\" title=\"可以使用 require.context() 方法来创建自己的（模块）上下文，这个方法有 3 个参数：\"></a>可以使用 require.context() 方法来创建自己的（模块）上下文，这个方法有 3 个参数：</h3><ul>\n<li>要搜索的文件夹目录</li>\n<li>是否还应该搜索它的子目录</li>\n<li>以及一个匹配文件的正则表达式</li>\n</ul>\n<hr>\n<h4 id=\"require-context模块导出（返回）一个（require）函数，这个函数可以接收一个参数：request-函数–这里的-request-应该是指在-require-语句中的表达式\"><a href=\"#require-context模块导出（返回）一个（require）函数，这个函数可以接收一个参数：request-函数–这里的-request-应该是指在-require-语句中的表达式\" class=\"headerlink\" title=\"require.context模块导出（返回）一个（require）函数，这个函数可以接收一个参数：request 函数–这里的 request 应该是指在 require() 语句中的表达式\"></a>require.context模块导出（返回）一个（require）函数，这个函数可以接收一个参数：request 函数–这里的 request 应该是指在 require() 语句中的表达式</h4><p>导出的方法有 3 个属性： resolve, keys, id。</p>\n<p>resolve 是一个函数，它返回请求被解析后得到的模块 id。<br>keys 也是一个函数，它返回一个数组，由所有可能被上下文模块处理的请求组成。<br>id 是上下文模块里面所包含的模块 id. 它可能在你使用 module.hot.accept 的时候被用到</p>\n<h3 id=\"eg：\"><a href=\"#eg：\" class=\"headerlink\" title=\"eg：\"></a>eg：</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">require.context(&quot;./test&quot;, false, /\\.test\\.js$/);</span><br><span class=\"line\">//（创建了）一个包含了 test 文件夹（不包含子目录）下面的、所有文件名以 `.test.js` 结尾的、能被 require 请求到的文件的上下文。</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">require.context(&quot;../&quot;, true, /\\.stories\\.js$/);</span><br><span class=\"line\">////（创建了）一个包含了父级文件夹（包含子目录）下面，所有文件名以 `.stories.js` 结尾的文件的上下文。</span><br></pre></td></tr></table></figure>\n<hr>\n<h2 id=\"3-webpack-base-conf中配置如下：\"><a href=\"#3-webpack-base-conf中配置如下：\" class=\"headerlink\" title=\"3 webpack.base.conf中配置如下：\"></a>3 webpack.base.conf中配置如下：</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">\ttest: /\\.svg$/,</span><br><span class=\"line\">\tloader: &apos;svg-sprite-loader&apos;,</span><br><span class=\"line\">\tinclude: [resolve(&apos;src/icons&apos;)],</span><br><span class=\"line\">\toptions: &#123;</span><br><span class=\"line\">\t  symbolId: &apos;icon-[name]&apos;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\ttest: /\\.(png|jpe?g|gif|svg)(\\?.*)?$/,</span><br><span class=\"line\">\tloader: &apos;url-loader&apos;,</span><br><span class=\"line\">\texclude: [resolve(&apos;src/icons&apos;)],</span><br><span class=\"line\">\toptions: &#123;</span><br><span class=\"line\">\t  limit: 10000,</span><br><span class=\"line\">\t  name: utils.assetsPath(&apos;img/[name].[hash:7].[ext]&apos;)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n<p>发现不同了没</p>\n<p>include 引入 src/icons<br>exclude 排除 src/icons </p>\n<p>不写exclude就会报错，因为它将svg处理了<br>否侧此处会报错</p>\n<p>引用</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">svg-icon</span> <span class=\"attr\">icon-class</span>=<span class=\"string\">\"user\"</span> /&gt;</span></span><br></pre></td></tr></table></figure>\n<p>大功告成！</p>\n<p>当你想定义颜色时，通过定义class,直接定义样式</p>\n<p>很完美有么有</p>\n","text":"现在我们要接触的是一个叫 svg-sprite-loader 的插件，用来根据导入的 svg 文件自动生成 symbol 标签并插入 html，接下来就可以在模版中方便地使用 svg-sprite 技术了如果不知道 svg-sprite 是什么，目前，SVG Sprite最佳实践","link":"","raw":null,"photos":[],"categories":[],"tags":[]},{"title":"vue-devtools安装的问题以及解决的方式","slug":"vue-devtools安装的问题以及解决的方式","date":"2018-04-21T10:29:40.000Z","updated":"2018-05-09T09:08:38.000Z","comments":true,"path":"api/articles/vue-devtools安装的问题以及解决的方式.json","excerpt":"","keywords":null,"cover":"/2018/04/21/vue-devtools安装的问题以及解决的方式/first.jpg","content":"<p>换了一个电脑，安装vue-devtools，因为以前安装过一次，没当回事。结果打脸了，搞了半天才安装好</p>\n<p>报错，提示了不识别build/hook.js”</p>\n<p>这是什么鬼</p>\n<p>结果发现，这是模式应用的错误，更改为development就OK了</p>\n<p>更改两处，然后就可以安装了</p>\n<p>第一处manifest.json</p>\n<p><img src=\"/2018/04/21/vue-devtools安装的问题以及解决的方式/first.jpg\" alt=\"bg\"></p>\n<p>第二处webpack.config.js</p>\n<p><img src=\"/2018/04/21/vue-devtools安装的问题以及解决的方式/second.jpg\" alt=\"bg\"></p>\n<p>这里的production更改为development</p>\n<p>看到这里，然后在执行npm run build</p>\n<p>然后在浏览器中扩展程序就好了</p>\n<p><img src=\"/2018/04/21/vue-devtools安装的问题以及解决的方式/third.jpg\" alt=\"bg\"></p>\n<p>这样就ok了</p>\n","text":"换了一个电脑，安装vue-devtools，因为以前安装过一次，没当回事。结果打脸了，搞了半天才安装好报错，提示了不识别build/hook.js”这是什么鬼结果发现，这是模式应用的错误，更改为development就OK了更改两处，然后就可以安装了第一处manifest.jso","link":"","raw":null,"photos":[],"categories":[],"tags":[]},{"title":"如何做一个带有毛玻璃效果的css样式","slug":"如何做一个带有毛玻璃效果的css样式","date":"2018-04-21T07:42:35.000Z","updated":"2018-05-09T09:09:09.000Z","comments":true,"path":"api/articles/如何做一个带有毛玻璃效果的css样式.json","excerpt":"","keywords":null,"cover":"/2018/04/21/如何做一个带有毛玻璃效果的css样式/bg1.png","content":"<h3 id=\"先来看看毛玻璃效果\"><a href=\"#先来看看毛玻璃效果\" class=\"headerlink\" title=\"先来看看毛玻璃效果\"></a>先来看看毛玻璃效果</h3><p><img src=\"/2018/04/21/如何做一个带有毛玻璃效果的css样式/bg1.png\" alt=\"bg\"></p>\n<h3 id=\"再来看看没有毛玻璃的效果\"><a href=\"#再来看看没有毛玻璃的效果\" class=\"headerlink\" title=\"再来看看没有毛玻璃的效果\"></a>再来看看没有毛玻璃的效果</h3><p><img src=\"/2018/04/21/如何做一个带有毛玻璃效果的css样式/bg.png\" alt=\"bg\"></p>\n<h3 id=\"效果很明显有木有\"><a href=\"#效果很明显有木有\" class=\"headerlink\" title=\"效果很明显有木有\"></a>效果很明显有木有</h3><h3 id=\"让我们来看看如何实现\"><a href=\"#让我们来看看如何实现\" class=\"headerlink\" title=\"让我们来看看如何实现\"></a>让我们来看看如何实现</h3><ul>\n<li>以下是我写的一段代码，你可以直接copy到你的编辑器，查看</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/css\"</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"undefined\">\t\t.box&#123;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\theight: 300px;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\twidth: 300px;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\tborder: 1px solid #ccc;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\tposition: relative;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\tbackground: url(http://img.ivsky.com/img/tupian/slides/201803/15/fangsuo_shudian.jpg) no-repeat center center;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t&#125;</span></span><br><span class=\"line\"><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"undefined\">\t\t.box_inner&#123;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\tposition: absolute;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\theight: 100px;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\twidth: 100px;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\toverflow: hidden;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\tleft: 50%;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\ttop: 50%;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\ttransform: translate(-50%,-50%);</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t&#125;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t.img_inner&#123;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\theight: 100px;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\twidth: 100px;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\tfilter: blur(5px);</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\tbackground: url(http://img.ivsky.com/img/tupian/slides/201803/15/fangsuo_shudian.jpg) no-repeat center center;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t&#125;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t.text_inner&#123;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\theight: 100px;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\twidth: 100px;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\tposition: absolute;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\tz-index: 99;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\ttext-align: center;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\tcolor: #ffffff;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\tleft: 0px;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\ttop: 0px;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\tline-height: 100px;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t&#125;</span></span><br><span class=\"line\"><span class=\"undefined\">\t</span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">'box'</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"box_inner\"</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"img_inner\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"text_inner\"</span>&gt;</span>文字<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n","text":"先来看看毛玻璃效果 [Figure] ","link":"","raw":null,"photos":[],"categories":[],"tags":[]},{"title":"vue-cli无法在打开ip，并且一个局域网下无法在手机调试","slug":"vue-cli无法在打开ip，并且一个局域网下无法在手机调试","date":"2018-04-20T03:35:19.000Z","updated":"2018-05-09T09:10:11.000Z","comments":true,"path":"api/articles/vue-cli无法在打开ip，并且一个局域网下无法在手机调试.json","excerpt":"","keywords":null,"cover":null,"content":"<h3 id=\"无法打开ip查看\"><a href=\"#无法打开ip查看\" class=\"headerlink\" title=\"无法打开ip查看\"></a>无法打开ip查看</h3><p>当我们npm run dev之后，输入<code>localhost</code>没有任何问题，但是当我们输入<code>本机ip</code>就会发现，局域网受限。</p>\n<p>这是因为在config/index.js 文件下 host的配置为’localhost’</p>\n<p>当你启动服务之后，也为了自己的项目不让别人通过ip来查看。</p>\n<p>如果你想启用ip来查看，那么我们可以有两种方式处理</p>\n<ul>\n<li><p>第一种</p>\n</li>\n<li><p>config/index.js 文件下 更改host的配置为’0.0.0.0’</p>\n</li>\n<li><p>第二种</p>\n</li>\n<li><p>package.json 文件下 dev 增加 –host 0.0.0.0</p>\n</li>\n</ul>\n<p>配置以上两种任何一种方式，就可以通过ip来访问了。同一个局域网电脑，也可以通过ip来访问。</p>\n<p>当我完成以上配置后，信心满满准备在移动端访问，结果，又是受限</p>\n<p>崩溃啊！！！</p>\n<p>继续查看文件，此时我查看的是， config/index.js</p>\n<p>因为这个是配置的整体内容</p>\n<p>此时，一段代码引起了我的注意</p>\n<p>devtool: ‘cheap-module-eval-source-map’</p>\n<p>此时，我们扩展一下内容</p>\n<h3 id=\"webpack-sourcemap-选项多种模式的一些解释\"><a href=\"#webpack-sourcemap-选项多种模式的一些解释\" class=\"headerlink\" title=\"webpack sourcemap 选项多种模式的一些解释\"></a>webpack sourcemap 选项多种模式的一些解释</h3><p>有人说 Webpack 难用，原因是 sourcemap 有 7 种，咱们就尝试解释下这些选项都是什么意思，不仅如此，咱们还会分析如何用最好的姿势使用这些配置。</p>\n<ul>\n<li><p><code>eval</code> 文档上解释的很明白，每个模块都封装到 <code>eval</code> 包裹起来，并在后面添加 //# sourceURL</p>\n</li>\n<li><p><code>source-ma</code>p 这是最原始的 <code>source-map</code> 实现方式，其实现是打包代码同时创建一个新的 <code>sourcemap</code> 文件， 并在打包文件的末尾添加 //# sourceURL 注释行告诉 JS 引擎文件在哪儿</p>\n</li>\n<li><p><code>hidden-source-map</code> 文档上也说了，就是 <code>soucremap</code> 但没注释，没注释怎么找文件呢？貌似只能靠后缀，譬如 xxx/bundle.js 文件，某些引擎会尝试去找 xxx/bundle.js.map</p>\n</li>\n<li><p><code>inline-source-map</code> 为每一个文件添加 sourcemap 的 DataUrl，注意这里的文件是打包前的每一个文件而不是最后打包出来的，同时这个 DataUrl 是包含一个文件完整 souremap 信息的 Base64 格式化后的字符串，而不是一个 url。</p>\n</li>\n<li><p><code>eval-source-map</code> 这个就是把 eval 的 sourceURL 换成了完整 souremap 信息的 DataUrl</p>\n</li>\n<li><p><code>cheap-source-map</code> 不包含列信息，不包含 loader 的 sourcemap，（譬如 babel 的 sourcemap）</p>\n</li>\n<li><p><code>cheap-module-source-map</code> 不包含列信息，同时 loader 的 sourcemap 也被简化为只包含对应行的。最终的 sourcemap 只有一份，它是 webpack 对 loader 生成的 sourcemap 进行简化，然后再次生成的。</p>\n</li>\n</ul>\n<p>webpack 不仅支持这 7 种，而且它们还是可以任意组合的，就如文档所说，你可以设置 souremap 选项为 cheap-module-inline-source-map。</p>\n<p>这么多模式，到底该用哪个？</p>\n<p>cheap-module-eval-source-map 绝大多数情况下都会是最好的选择，这也是下版本 webpack 的默认选项。</p>\n<p>相关解释：</p>\n<ul>\n<li><p>大部分情况我们调试并不关心列信息，而且就算 sourcemap 没有列，有些浏览器引擎（例如 v8） 也会给出列信息，所以我们使用 cheap 模式可以大幅提高 souremap 生成的效率。</p>\n</li>\n<li><p>使用 eval 方式可大幅提高持续构建效率，参考 webapck devtool 文档 下方速度对比表格，这对经常需要边改边调的前端开发而言，非常重要！</p>\n</li>\n<li><p>使用 module 可支持 babel 这种预编译工具（在 webpack 里做为 loader 使用）。</p>\n</li>\n<li><p>eval-source-map 使用 DataUrl 本身包含完整 sourcemap 信息，并不需要像 sourceURL 那样，浏览器需要发送一个完整请求去获取 sourcemap 文件，这会略微提高点效率</p>\n</li>\n</ul>\n<h3 id=\"解决此问题就是配置成这样-devtool-‘-inline-eval-cheap-source-map’\"><a href=\"#解决此问题就是配置成这样-devtool-‘-inline-eval-cheap-source-map’\" class=\"headerlink\" title=\"解决此问题就是配置成这样 devtool: ‘#inline-eval-cheap-source-map’\"></a>解决此问题就是配置成这样 devtool: ‘#inline-eval-cheap-source-map’</h3><p>看到问题不要怕，这是我们做技术最希望遇到的，因为你可以非常快的提升，当你长时间没遇到问题，你觉得会有好处么？</p>\n","text":"无法打开ip查看当我们npm run dev之后，输入localhost没有任何问题，但是当我们输入本机ip就会发现，局域网受限。这是因为在config/index.js 文件下 host的配置为’localhost’当你启动服务之后，也为了自己的项目不让别人通过ip来查看。如果","link":"","raw":null,"photos":[],"categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2018-04-19T09:14:35.000Z","updated":"2018-05-09T09:10:52.000Z","comments":true,"path":"api/articles/hello-world.json","excerpt":"","keywords":null,"cover":null,"content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the ","link":"","raw":null,"photos":[],"categories":[],"tags":[]}]}